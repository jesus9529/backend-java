services:
  springboot-app-prod:
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "8080:8080" # Mapea el puerto 8080 del contenedor al host
    environment:
      CORS_ALLOWED_ORIGINS: http://localhost
      CORS_ALLOWED_METHODS: GET,POST,PUT,DELETE
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-prod:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      - postgres-prod # Asegura que PostgreSQL est√© disponible antes de iniciar la app
    networks:
      - prod-app-network
    restart: unless-stopped

  postgres-prod:
    image: postgres:15
    container_name: postgres-prod
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
    volumes:
      - prod-postgres-data:/var/lib/postgresql/data
    networks:
      - prod-app-network

networks:
  prod-app-network:
    driver: bridge

volumes:
  prod-postgres-data:
